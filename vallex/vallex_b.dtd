<?xml version='1.0' encoding='utf-8'?>


<!--
In the b-version of the VALLEX XML format, the root element \textit{vallex\_b} consists of
two parts ++ \texttt{head} contains the general information about the lexicon, whereas \texttt{body} contains the data:
-->
<!ELEMENT vallex_b (head, body)>
<!--
The only attribute is a namespace: it is fixed to VALLEX 2.0 namespace:
-->
<!ATTLIST vallex_b
        xmlns CDATA #FIXED "http://ufal.mff.cuni.cz/vallex-2.0"
      >
<!--
\noindent In the head part, the title of the presented lexical resource is specified (VALLEX ++ Valency Lexicon of Czech Verbs),
the version of the data and the date when this XML file was generated (in the following sections we  work with the version 1.5
created in June 2005), names of the authors (Markéta Lopatková, Zdeněk Žabokrtský, Karolína Skwarska, Václava Benešová),
and a short description of VALLEX:

-->
<!ELEMENT head (title, version, last_change, authors, description)>
<!ELEMENT title (#PCDATA)>
<!ELEMENT version (#PCDATA)>
<!ELEMENT last_change (#PCDATA)>
<!ELEMENT authors (author+)>
<!ELEMENT author (#PCDATA)>
<!ELEMENT description (#PCDATA)>
<!--

 The body part of the lexicon consists of two elements:

-->
<!ELEMENT body (entries, relations)>
<!--

\noindent The element \texttt{entries} which contains lexemes and their LUs, whereas
the element \texttt{relations} is intended to contain the links between lexemes or between lexical units,
especially for representation of word-formative relations (e.g. due to prefixing) and lexical functions
(as outlined in Sections \ref{sec:prefix} and \ref{sec:lf}).
The development of of the representation of such relations has not been stabilized so far, therefore the element \texttt{relations}
is left empty in the presented DTD:

-->
<!ELEMENT relations EMPTY>
<!--

\noindent  The lexeme entries are not inserted directly into the element \texttt{entry}, but are first clustered
within the element \texttt{lexeme\_cluster}:

-->
<!ELEMENT entries (lexeme_cluster+)>
<!ELEMENT lexeme_cluster (lexeme+)>
<!--

\noindent so that the reflexive and irreflexive lexemes (see Section \ref{sec:refl}) sharing
the same m-lemma(s) (such as three lexemes \textit{brát}/\textit{vzít}, \textit{brát si}/\textit{vzít si},
\textit{brát se}/\textit{vzít se} sharing m-lemmas \textit{brát} and \textit{vzít}) get closer in the
data structure, as they are supposed to be processed together in many situations.
For instance, in Word Sense Disambiguation task,
once a given m-lemma occurs in a sentence, both reflexive and irreflexive lexemes 
come into play, no matter whether there is any reflexive particle in the outer shape of the sentence or not.

Each lexeme is embedded into the lexeme cluster even if it is the only lexeme  in the cluster.
The reason is following: in this way, `new' reflexive lexemes generated by alternations can be easily added to the lexicon when
creating its expanded form (some alternations crossing lexeme boundaries are mentioned in Section \ref{sec:threefold}).
 Without clustering even the single lexemes,
the creation of the expanded form of the lexicon would have required its non-additive restructuring.



Now, the lexeme as defined in this thesis (Section \ref{sec:lxm}) associates lexical forms with lexical units. There are optionally also links to the same lexeme in another lexicon:

-->
<!ELEMENT lexeme (lexical_forms, links?, lexical_units)>
<!--

\noindent Besides that, each lexeme is equipped with the attribute \texttt{pos} specifying its part of speech
(although there are only verbs in VALLEX at the current stage, the presented DTD
is prepared also for nouns, adjectives and adverbs) and a unique identifier \texttt{id}.

-->
<!ATTLIST lexeme
        pos (v|n|adj|adv) #REQUIRED
        id ID #REQUIRED
      >
<!--

The set of lexical forms manifesting the given lexeme is determined using three
types of information: first, the m-lemmas are listed, second, the reflexive particle is specified
(only in the case of reflexive lexemes), and third, other additional constraints can be specified:

-->
<!ELEMENT lexical_forms 
    ((mlemma|mlemma_variants)+, commonrefl?, constraint*)>
<!--

\noindent The content of the element \texttt{mlemma} is the m-lemma itself (i.e. a sequence of letters
in the national alphabet).
If there is a possibility for an optional reflexive particle,
its form (\textit{se} or \textit{si}) is assigned to the particular m-lemma
in the attribute \texttt{optrefl} (new in VALELX 2.8 or better 3.0).
For each m-lemma, its morphological aspect is obligatorily
stored in the attribute \texttt{aspect}; in addition, in the case of homography (see Section \ref{sec:homogr})
an Arabic number is stored into the attribute \texttt{homograph} in order to distinguished the given m-lemma from the other homograph:

-->
<!ELEMENT mlemma (#PCDATA)>
<!ATTLIST mlemma 
        aspect (pf|impf|iter|biasp) #REQUIRED
        homograph CDATA #IMPLIED
        coindex CDATA #IMPLIED
        optrefl (se|si) #IMPLIED
      >
<!--

\noindent The attribute \texttt{coindex} has to be used because of the fact that the aspectual counterparts
are stored within the same lexeme (see Section \ref{sec:aspect}), but certain items in the entries of the LUs within the lexeme
must contain different values for the two counterparts. For instance, example sentences for \textit{vzít si} and \textit{brát si}
(e.g. in the sense `to marry') are simply different strings as they contain different inflected forms of different m-lemmas.
Our solution is that we split the example into parts which are co-indexed with the individual m-lemmas via the value
of the attribute \texttt{coindex}. Glosses can be split in the same way as examples.

In the case of m-lemma variants (see Section \ref{sec:variants}), two or more m-lemmas are merged together
into the \texttt{mlemma\_variants} element:

-->
<!ELEMENT mlemma_variants (mlemma+)>
<!ATTLIST mlemma_variants
        coindex CDATA #IMPLIED
      >
<!--

\noindent The element \texttt{commonrefl} is used only within reflexive lexemes and contains the
 reflexive particle itself (simply said, either \textit{si} or \textit{se}):

-->
<!ELEMENT commonrefl (#PCDATA)>
<!--


The element \texttt{constraint} is supposed to be used in the case of other constraints
on the surface form of the frame evoker (such as tense or negation, as discussed in Section \ref{sec:evokers}). So far,
such constraints have not been annotated in the VALLEX data, therefore leave their
representation partly underspecified at this moment: 

-->
<!ELEMENT constraint EMPTY>
<!ATTLIST constraint 
        feature CDATA #REQUIRED
        value CDATA #IMPLIED
      >
<!-- 

Now we turn from the representation of lexical form to the representation of lexical units.
Again, entries representing individual lexical units are not contained directly in the element 
\texttt{lexical\_units}, but are clustered first (recall the alternation-based lexicon model
presented in Section \ref{sec:alter} and the distinction between basic LUs and derived LUs):

-->
<!ELEMENT lexical_units (lu_cluster+)>
<!ELEMENT lu_cluster ((blu,dlu*)|dlu+)>
<!ATTLIST lu_cluster 
        id ID #REQUIRED
        idiom (0|1) #IMPLIED
      >
<!--

The element \texttt{blu} representing basic lexical units is structured as follows:

-->
<!ELEMENT blu (lexical_forms?, links?, frame, gloss, example,
               control?, reflex*, diat*, recipr*, class?,
               conv*, split*, multiple*, alter*, alternations?)>
<!--

\noindent and is of course associated with a unique identifier:

-->
<!ATTLIST blu
    id ID #REQUIRED
>
<!--

If the set of lexical forms of the given LU is not identical with the set of lexical
forms specified for the whole lexeme, then it can be re-specified: for the given LU,
the content of the element \texttt{lexical\_forms} embedded directly in \texttt{blu} overrides
what was specified in \texttt{lexical\_forms} embedded in \textit{lexeme}. This is to be
used especially in the cases when the given LU can be used only with one verb from the aspectual pair.

The most important part of each LU entry is of course its valency frame stored in the element \texttt{frame}:
The valency frame consists of a (possibly empty) sequence of slots:

-->
<!ELEMENT frame (slot*)>
<!--


In each slot,
we specify properties related to both surface and deep valency frames, namely the list
of possible surface forms (discussed in Section \ref{sec:constraint-form})
represented by the elements \texttt{form}, functor (discussed in Section \ref{sec:constraint-functor}) stored in the attribute \texttt{functor},
and type of the slot, in which the dichotomy obligatory and optional (corresponding
to the dialog test mentioned in \ref{sec:fgd} and enriched with the third value
for free modifiers which are still related to the given LU in some specific way).\footnote{We are
aware of the fact that classification of frame slots with respect to their obligatoriness
deserves much more attention than it gets in this thesis. First, the deep
obligatoriness should be strictly distinguished from the surface obligatoriness (to our knowledge,
the latter one has not been studied within FGD so far). Second, it is very likely that
finer scales are necessary (e.g. \cite{somers-86} suggests six degrees of valency binding).
}

-->
<!ELEMENT slot (form*)>
<!ATTLIST slot
   functor (ACT|PAT|ADDR|EFF|ORIG|ACMP|ADVS|AIM|APP|APPS|ATT|BEN|CAUS|
         CNCS|COMPL|COND|CONJ|CONFR|CPR|CRIT|CSQ|CTERF|DENOM|DES|DIFF|
         DIR1|DIR2|DIR3|DISJ|DPHR|ETHD|EXT|FPHR|GRAD|HER|ID|INTF|INTT|
         LOC|MANN|MAT|MEANS|MOD|NA|NORM|PAR|PARTL|PN|PREC|PRED|REAS|
         REG|RESL|RESTR|RHEM|RSTR|SUBS|TFHL|TFRWH|THL|THO|TOWH|
         TPAR|TSIN|TTILL|TWHEN|VOC|VOCAT|SENT|
         DIR|OBST|RCMP)   #REQUIRED
   type (obl|opt|typ) #REQUIRED
     >
<!--

Surface forms captured by the element \texttt{form} are first classified
by the attribute \texttt{type} (see Section \ref{sec:constraint-form}). Its value implies which
further attributes must be specified (for instance, the type \texttt{prepos\_case}
requires \texttt{case} and \texttt{prepos\_lemma} to be filled):

-->
<!ELEMENT form EMPTY>
<!ATTLIST form
  type (direct_case|prepos_case|subord_conj|cont|
        infinitive|adjective|phraseme_part|
		general|adjective-possessive|adverb) #REQUIRED
  case (1|2|3|4|5|6|7) #IMPLIED
  prepos_lemma (bez|do|dle|jako|jako_na|k|kolem|kvůli|mezi|místo|na|nad|na_úkor|
       o|od|ohledně|okolo|oproti|po|pod|podle|pro|proti|před|přes|
       při|s|u|v|ve_prospěch|vůči|v_zájmu|z|za|než) #IMPLIED
  subord_conj_lemma (že|aby|zda|ať|jak|až) #IMPLIED
  phraseme_part CDATA #IMPLIED
  to_be (0|1) #IMPLIED
>
<!--

Besides the valency frame, the element \texttt{blu} is obligatorily equipped with
the elements \texttt{gloss} and \texttt{example}, and optionally with the elements
\texttt{control}, \texttt{class}, \texttt{alternations}.

The element \texttt{gloss} contains a synonymic expression (or a close paraphrase)
for the given LU. Its function is purely distinctive: it should help the human
user to quickly grasp which LU in the lexicon  corresponds to which sense.
As it was already mentioned, aspectual counterparts merged in one lexeme
may require different glosses: in such a case the element \texttt{gloss} can contain
two (or more) parts co-idexed with the individual m-lemmas instead of a single value:\footnote{
Note that the start iterator "*" was used in the specification of  the element \texttt{gloss} only because of the fact
that DTD does not allow direct alternation of text and element content.}

-->
<!ELEMENT gloss (#PCDATA|coindexed)*>
<!ELEMENT coindexed (#PCDATA)>
<!ATTLIST coindexed
     coindex CDATA #REQUIRED
>
<!--



The element \texttt{example} contains an example usage of the given LU (one or
more sentences or sentence fragments):

-->
<!ELEMENT example (#PCDATA|coindexed)*>
<!--

The element \texttt{control}  is present only in LUs that
contain infinitive in one of their slots. The content of this element specifies
the type of control (see Section \ref{sec:control}):

-->
<!ELEMENT control (#PCDATA)>
<!--

The element \texttt{recipr} specifies which type of reciprocal construction
can be used with the given LU.

-->
<!ELEMENT recipr (#PCDATA|coindexed)*>
<!ATTLIST recipr
    type CDATA #REQUIRED
>
<!--

The element \texttt{reflex} specifies which type of reflexivity can be
used with the given LU.

-->
<!ELEMENT reflex (#PCDATA|coindexed)*>
<!ATTLIST reflex
	type (coref3|coref4) #REQUIRED
>


<!--

The element \texttt{diat} specifies which type of diathesis can be
used with the given LU.
Its subelements \texttt{diatexample} (possibly grouped by aspect by the use 
of the elements \texttt{coindexeddiat}) contain example usage of the verb in 
diathesis, with an indication of the type of the example (manually checked, 
made up by an annotator, or only automatically extracted) and the subtype 
of the diathesis.
The examples are grouped into the element \texttt{coindexeddiat} based on the 
aspect of the main and auxiliary verbs.

-->
<!ELEMENT diat (diatexample|coindexeddiat)*>
<!ATTLIST diat
	type (deagent|recipient|poss-result|passive) #REQUIRED
	value (yes|no) #REQUIRED
>
<!ELEMENT coindexeddiat (diatexample+)>
<!ATTLIST coindexeddiat
	coindex CDATA #IMPLIED
	auxiliary (se|být|bývat|mít|mívat|dostat|dostávat) #REQUIRED
	freq CDATA #IMPLIED
>
<!ELEMENT diatexample (#PCDATA)*>
<!ATTLIST diatexample
	subtype (deagent|deagent0|recipient|poss-result-both|poss-result-conv|poss-result-nconv|passive)  #REQUIRED
	status (checked|made-up|automatic) #REQUIRED
>


<!--

% This is one possibility... But I've finally chosen the other one.
% Three elements \texttt{conv}, \texttt{split} and \texttt{multiple} specify
% three types of lexical alternations.
% - - - OR - - -
The element \texttt{alter} specifies the type and subtype of lexical
alternation.

-->
<!ELEMENT alter (flink)>
<!ATTLIST alter
	type (conv|split|multiple) #REQUIRED
	subtype CDATA #REQUIRED
	locatumtype (formation|formation-person|destruction|destruction-person|objectless) #IMPLIED
	primary (0|1) #REQUIRED
>
<!--
% <!ELEMENT conv (flink)+>
% <!ATTLIST conv
% 	type CDATA #REQUIRED
% >
% <!ELEMENT split (flink)+>
% <!ATTLIST split
% 	type CDATA #REQUIRED
% >
% <!ELEMENT multiple (flink)+>
% <!ATTLIST multiple
% 	type CDATA #REQUIRED
% >
-->
<!--

The element \texttt{class} specifies to which semantic class
the given LU belongs.\footnote{The inventory of verb classes used
in VALLEX is still very preliminary and is not mentioned in this thesis.}

-->
<!ELEMENT class (#PCDATA)>
<!--

===OBSOLETE ?===
Alternation which are applicable on the given LU are listed
in the element \texttt{alternations} (of course, since 
the alternations in Czech are not sufficiently studied yet,
it is not possible to properly specify the list of possible
values of the attribute \texttt{alt\_name} in the presented DTD):

-->
<!ELEMENT alternations (alternation+)>
<!ELEMENT alternation (EMPTY)>
<!ATTLIST alternation
     alt_name CDATA #REQUIRED
>
<!--

===OBSOLETE ?===
As the alternations in Czech are not sufficiently studied yet,
it is not possible to list them as the possible values of the
attribute \texttt{alt\_name}.
-->

<!--

Each \textttt{lexeme} and each basic lexical unit (\texttt{blu}) can be
provided with links to different lexicon (PDT-Vallex, typically). They are
grouped into the element \texttt{links}.

A \texttt{lexeme}'s \texttt{links} consists of one or more links to words,
\texttt{wlink}, and \texttt{blu}'s \texttt{links} consists of one or more
links to frames, \texttt{flink}. Both elements have no content but attributes.
Common attributes are: \texttt{coindex} specifies the concerned aspect,
\texttt{variant} (if present) specifies the lemma variant for which the link
is applicable, and \texttt{file} is the filename of the other lexicon.
Attribute \texttt{lexeme_id} is the identificator in the other lexicon and is
available only for \texttt{wlink}, whereas \texttt{frame_id} is similarly
the identificator for \texttt{flink}. For each \texttt{flink} the
\texttt{weight} (or mapping confidence) is also specified.

-->
<!ELEMENT links (wlink|flink)+>
<!ELEMENT wlink EMPTY>
<!ATTLIST wlink
	coindex    CDATA #IMPLIED
	variant    CDATA #IMPLIED
	file       CDATA #REQUIRED
	lexeme_id  CDATA #REQUIRED
>
<!ELEMENT flink EMPTY>
<!ATTLIST flink
	coindex    CDATA #IMPLIED
	variant    CDATA #IMPLIED
	file       CDATA #REQUIRED
	type       CDATA #IMPLIED
	weight     CDATA #REQUIRED
	frame_id   CDATA #REQUIRED
>	<!-- TODO change attribute 'type' into REQUIRED? -->
<!--

Let us focus on the derived LUs now. The element \texttt{dlu}
is structured in the same way as \texttt{blu}, just that the components
\texttt{gloss} and \texttt{example} are not obligatory (derived LUs are
supposed to be generated mostly automatically, and it would be extremely difficult
to generate also usage examples and glosses). The element \texttt{frame} 
embedded in \texttt{dlu} contains a valency frame
resulting from the application of the specified alternation on the frame of the specified input LU:

-->
<!ELEMENT dlu (lexical_forms?, frame, gloss?, example?,
               control?, class?, alternations?)>
<!ATTLIST dlu
     alt_name CDATA #REQUIRED
     input_lu IDREFS #REQUIRED
>
<!--

Finally, it should be recalled that no alternations
have been physically annotated in VALLEX yet and therefore
no derived LUs can be generated now. However,
the b-version data format itself is prepared for the alternation-based model.

-->

